name: Deploy Cloudflare Pages

on:
  workflow_run:
    workflows: [CI]
    types: [completed]
    branches: [master]
  pull_request_target:
    branches: [master]

jobs:
  check:
    name: Build and deploy CF Pages
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success' || github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - run: npm ci
      - run: npm run build

      - name: Deploy alok-website-webapp
        id: deploy-alok-website-webapp
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy ./dist --project-name=testing-cloudflare-pages
          wranglerVersion: '3.51.2'

      - name: Comment with deploy link
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const apps = [
              { name: 'alok-website-webapp', url: process.env.ALOK_WEBSITE_WEBAPP_DEPLOYMENT_URL },
              // Add more apps here
            ];
            const commitHash = context.payload.pull_request.head.sha;
            const status = 'âœ…  Deploy successful!';

            let tableHeader = '| App Name | Last Commit | Preview URL | Status |';
            let tableDivider = '| --------- | ----------- | ----------- | ------ |';
            let tableRows = apps.map(app => `| ${app.name} | \`${commitHash.substring(0, 7)}\` | ${app.url} | ${status} |`).join('\n');

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `
              # ðŸŒ© Deploying with Cloudflare Pages
              ${tableHeader}
              ${tableDivider}
              ${tableRows}
              `
            });
        env:
          ALOK_WEBSITE_WEBAPP_DEPLOYMENT_URL: ${{ steps.deploy-alok-website-webapp.outputs.deployment-url }}